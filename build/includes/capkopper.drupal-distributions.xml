<?xml version="1.0" encoding="utf-8"?>

<project name="capkopper_drupal_distributions" phingVersion="2.10.0" default="usage">
  <target name="ck-clean-drupal-installation"
        depends="init, setup-drush"
        description="Clean Drupal installtion using Drush.">

    <delete file="${build.core.dir}/profiles/${drupal.profile}" />
    <copy todir="${build.core.dir}/profiles/${drupal.profile}">
      <fileset dir="${phing.dir}">
        <include name="**"></include>
        <exclude name="**/.git/**"></exclude>
        <exclude name="/.gitignore"></exclude>
        <exclude name="/local/**"></exclude>
        <exclude name="/bin/**"></exclude>
        <exclude name="/build/**"></exclude>
        <exclude name="/build-capkopper-corporate-dev.make"></exclude>
        <exclude name="/build-capkopper-corporate.make"></exclude>
        <exclude name="/build.default.properties"></exclude>
        <exclude name="/build.properties"></exclude>
        <exclude name="/build-temp/**"></exclude>
        <exclude name="/build.xml"></exclude>
        <exclude name="/composer.json"></exclude>
        <exclude name="/composer.lock"></exclude>
        <exclude name="/drupal-org-core.make"></exclude>
        <exclude name="/drupal-org-dev.make"></exclude>
        <exclude name="/drupal-org.make"></exclude>
        <exclude name="/make/**"></exclude>
        <exclude name="/vendor/**"></exclude>
      </fileset>
    </copy>

    <copy todir="${build.core.dir}/sites/all/drush">
      <fileset dir="${phing.dir}/local/drush">
        <include name="**"></include>
      </fileset>
    </copy>

    <delete file="${build.core.dir}/CHANGELOG.txt" />
    <delete file="${build.core.dir}/COPYRIGHT.txt" />
    <delete file="${build.core.dir}/INSTALL.mysql.txt" />
    <delete file="${build.core.dir}/INSTALL.pgsql.txt" />
    <delete file="${build.core.dir}/install.php" />
    <delete file="${build.core.dir}/INSTALL.sqlite.txt" />
    <delete file="${build.core.dir}/INSTALL.txt" />
    <delete file="${build.core.dir}/LICENSE.txt" />
    <delete file="${build.core.dir}/MAINTAINERS.txt" />
    <delete file="${build.core.dir}/modules/README.txt" />
    <delete file="${build.core.dir}/PATCHES.txt" />
    <delete file="${build.core.dir}/README.txt" />
    <delete file="${build.core.dir}/sites/all/libraries/README.txt" />
    <delete file="${build.core.dir}/sites/all/modules/README.txt" />
    <delete file="${build.core.dir}/sites/all/themes/README.txt" />
    <delete file="${build.core.dir}/sites/example.sites.php" />
    <delete file="${build.core.dir}/sites/README.txt" />
    <delete file="${build.core.dir}/themes/README.txt" />
    <delete file="${build.core.dir}/UPGRADE.txt" />
    <delete>
      <fileset dir="${build.core.dir}">
        <include name="*.patch" />
      </fileset>
    </delete>

    <chmod file="${build.core.dir}/sites/default" mode="0755" />
    <delete file="${build.core.dir}/sites/default/default.settings.php" />
    <chmod file="${build.core.dir}/sites/default" mode="0555" />

    <if>
      <and>
        <isset property="drush.site-security.remove-authorize"/>
        <istrue value="${drush.site-security.remove-authorize}"/>
      </and>
      <then>
        <delete file="${build.core.dir}/authorize.php" />
      </then>
    </if>

    <if>
      <and>
        <isset property="drush.site-security.remove-cron"/>
        <istrue value="${drush.site-security.remove-cron}"/>
      </and>
      <then>
        <delete file="${build.core.dir}/cron.php" />
      </then>
    </if>

    <if>
      <and>
        <isset property="drush.site-security.remove-update"/>
        <istrue value="${drush.site-security.remove-update}"/>
      </and>
      <then>
        <delete file="${build.core.dir}/update.php" />
      </then>
    </if>
  </target>

  <target name="ck-update-drupal-settings"
        depends="init, setup-drush"
        description="Update Drupal configuration using Drush.">

    <!-- Add specific configuration to the settings.php file -->
    <if>
      <available file="${build.core.dir}/sites/${drush.site-install.sites_subdir}/settings.php" />
      <then>
        <chmod file="${build.core.dir}/sites/${drush.site-install.sites_subdir}/settings.php" mode="0644" />

        <!-- Add Filecache configuration -->
        <append destFile="${build.core.dir}/sites/${drush.site-install.sites_subdir}/settings.php" file="${phing.dir}/build/config/filecache.conf">
          <filterchain>
            <replacetokens begintoken="%%" endtoken="%%">
              <token key="PROFILE" value="${drupal.profile}" />
            </replacetokens>
          </filterchain>
        </append>

        <!-- Add Composer Manager configuration -->
        <append destFile="${build.core.dir}/sites/${drush.site-install.sites_subdir}/settings.php" file="${phing.dir}/build/config/composer-manager.conf" />

        <!-- Add capKopper SMTP configuration -->
        <if>
          <and>
            <isset property="drush.site-install.capkopper-smtp"/>
            <istrue value="${drush.site-install.capkopper-smtp}"/>
          </and>
          <then>
            <append destFile="${build.core.dir}/sites/${drush.site-install.sites_subdir}/settings.php" file="${phing.dir}/build/config/capkopper-smtp.conf" />
          </then>
        </if>

        <!-- Add capKopper SEO configuration -->
        <if>
          <and>
            <isset property="drush.site-install.capkopper-seo"/>
            <istrue value="${drush.site-install.capkopper-seo}"/>
          </and>
          <then>
            <append destFile="${build.core.dir}/sites/${drush.site-install.sites_subdir}/settings.php" file="${phing.dir}/build/config/capkopper-seo.conf" />
          </then>
        </if>
      </then>
    </if>

    <!-- Set variable: site default country -->
    <if>
      <and>
        <isset property="drush.site-install.site-default-country"/>
        <not>
          <equals arg1="${drush.site-install.site-default-country}" arg2="" />
        </not>
      </and>
      <then>
        <drush command="variable-set" root="${build.core.dir}" assume="yes">
          <param>site_default_country</param>
          <param>${drush.site-install.site-default-country}</param>
        </drush>
        <echo msg="Default country set to '${drush.site-install.site-default-country}'."/>
      </then>
      <else>
        <echo msg="Default country is not specified and was ignored."/>
      </else>
    </if>

    <!-- Set variable: date first day -->
    <if>
      <and>
        <isset property="drush.site-install.date-first-day"/>
        <not>
          <equals arg1="${drush.site-install.date-first-day}" arg2="" />
        </not>
      </and>
      <then>
        <drush command="variable-set" root="${build.core.dir}" assume="yes">
          <param>date_first_day</param>
          <param>${drush.site-install.date-first-day}</param>
        </drush>
        <echo msg="Date first day set to '${drush.site-install.date-first-day}'."/>
      </then>
      <else>
        <echo msg="Date first day is not specified and was ignored."/>
      </else>
    </if>

    <!-- Set variable: date default timezone -->
    <if>
      <and>
        <isset property="drush.site-install.date-default-timezone"/>
        <not>
          <equals arg1="${drush.site-install.date-default-timezone}" arg2="" />
        </not>
      </and>
      <then>
        <drush command="variable-set" root="${build.core.dir}" assume="yes">
          <param>date_default_timezone</param>
          <param>${drush.site-install.date-default-timezone}</param>
        </drush>
        <echo msg="Date default timezone set to '${drush.site-install.date-default-timezone}'."/>
      </then>
      <else>
        <echo msg="Date default timezone is not specified and was ignored."/>
      </else>
    </if>
  </target>

  <target name="ck-install-extra-modules"
        depends="init, setup-drush"
        description="Update Drupal configuration using Drush.">

    <!-- Install module: capkopper_et -->
    <if>
      <and>
        <isset property="drush.site-install.capkopper-et"/>
        <istrue value="${drush.site-install.capkopper-et}"/>
      </and>
      <then>
        <drush command="pm-enable" root="${build.core.dir}" assume="yes">
          <param>capkopper_et</param>
        </drush>
        <echo msg="capKopper Entity Translation module has been enabled."/>
      </then>
    </if>

    <!-- Install module: capkopper_i18n -->
    <if>
      <or>
        <and>
          <isset property="drush.site-install.capkopper-i18n"/>
          <istrue value="${drush.site-install.capkopper-i18n}"/>
        </and>
        <and>
          <isset property="drush.site-install.capkopper-i18n-en"/>
          <istrue value="${drush.site-install.capkopper-i18n-en}"/>
        </and>
        <and>
          <isset property="drush.site-install.capkopper-i18n-fr"/>
          <istrue value="${drush.site-install.capkopper-i18n-fr}"/>
        </and>
      </or>
      <then>
        <drush command="pm-enable" root="${build.core.dir}" assume="yes">
          <param>capkopper_i18n</param>
        </drush>
        <echo msg="capKopper i18n module has been enabled."/>
      </then>
    </if>

    <!-- Install module: capkopper_i18n_en -->
    <if>
      <and>
        <isset property="drush.site-install.capkopper-i18n-en"/>
        <istrue value="${drush.site-install.capkopper-i18n-en}"/>
      </and>
      <then>
        <drush command="pm-enable" root="${build.core.dir}" assume="yes">
          <param>capkopper_i18n_en</param>
        </drush>
        <echo msg="capKopper i18n EN module has been enabled."/>
      </then>
    </if>

    <!-- Install module: capkopper_i18n_fr -->
    <if>
      <and>
        <isset property="drush.site-install.capkopper-i18n-fr"/>
        <istrue value="${drush.site-install.capkopper-i18n-fr}"/>
      </and>
      <then>
        <drush command="pm-enable" root="${build.core.dir}" assume="yes">
          <param>capkopper_i18n_fr</param>
        </drush>
        <echo msg="capKopper i18n FR module has been enabled."/>
      </then>
      <else>
        <!-- Do not update the translations if there is no language that needs
            it, otherwise the drush command returns an error that makes the
            build fail.
            @TODO should we use checkreturn="false"? -->
        <property name="drush.site-init.l10n-update" value="false"/>
      </else>
    </if>

    <!-- Install module: capkopper_performance -->
    <if>
      <and>
        <isset property="drush.site-install.capkopper-performance"/>
        <istrue value="${drush.site-install.capkopper-performance}"/>
      </and>
      <then>
        <drush command="pm-enable" root="${build.core.dir}" assume="yes">
          <param>capkopper_performance</param>
        </drush>
        <echo msg="capKopper Performance module has been enabled."/>
      </then>
    </if>

    <!-- Install module: capkopper_seo -->
    <if>
      <and>
        <isset property="drush.site-install.capkopper-seo"/>
        <istrue value="${drush.site-install.capkopper-seo}"/>
      </and>
      <then>
        <drush command="pm-enable" root="${build.core.dir}" assume="yes">
          <param>capkopper_seo</param>
        </drush>
        <echo msg="capKopper SEO module has been enabled."/>
      </then>
    </if>

    <!-- Install module: capkopper_smtp -->
    <if>
      <and>
        <isset property="drush.site-install.capkopper-smtp"/>
        <istrue value="${drush.site-install.capkopper-smtp}"/>
      </and>
      <then>
        <drush command="pm-enable" root="${build.core.dir}" assume="yes">
          <param>capkopper_smtp</param>
        </drush>
        <echo msg="capKopper SMTP module has been enabled."/>
      </then>
    </if>

    <!-- Update translations -->
    <if>
      <and>
        <isset property="drush.site-init.l10n-update"/>
        <istrue value="${drush.site-init.l10n-update}"/>
      </and>
      <then>
        <drush command="l10n-update" root="${build.core.dir}" assume="yes">
        </drush>
      </then>
    </if>

    <!-- Prepare versioning -->
    <if>
      <and>
        <isset property="drush.capkopper.prepare-versioning"/>
        <istrue value="${drush.capkopper.prepare-versioning}"/>
      </and>
      <then>
        <chmod file="${build.core.dir}/sites/default" mode="0755" />

        <exec command="mv ${build.core.dir} ${build.core.dir}/../drupal" />
        <mkdir dir="${build.core.dir}" />
        <exec command="mv ${build.core.dir}/../drupal ${build.core.dir}" />



        <!--<move todir="${build.core.dir}/drupal" includeemptydirs="true">
          <fileset dir="${build.core.dir}">
            <exclude name="/drupal" />
          </fileset>
        </move>-->
        <mkdir dir="${build.core.dir}/config/default" />

        <move todir="${build.core.dir}/config/default">
          <fileset dir="${build.core.dir}/drupal">
            <include name=".htaccess" />
            <include name="web.config" />
          </fileset>
        </move>

        <chmod file="${build.core.dir}/drupal/sites/default" mode="0555" />

        <copy file="${build.core.dir}/drupal/sites/default/settings.php" tofile="${build.core.dir}/config/default/settings.php" />

        <copy file="${phing.dir}/build/config/gitignore-sample" tofile="${build.core.dir}/.gitignore" />

        <!-- @TODO change the sample settings.php file database configuration -->

        <!-- Initialize repository -->
        <if>
          <and>
            <isset property="drush.capkopper.git-repository"/>
            <not>
              <equals arg1="${drush.capkopper.git-repository}" arg2="" />
            </not>
          </and>
          <then>
            <exec command="git init" dir="${build.core.dir}" checkreturn="false" />
            <exec command="git branch develop" dir="${build.core.dir}" checkreturn="false" />
            <exec command="git checkout develop" dir="${build.core.dir}" checkreturn="false" />
            <exec command="git remote add origin ${drush.capkopper.git-repository}" dir="${build.core.dir}" checkreturn="false" />
            <!-- @TODO add the gitflow configuration -->

            <!--<exec command="git push -u origin --all" dir="${build.core.dir}" checkreturn="false" />-->
          </then>
        </if>
      </then>
    </if>
  </target>

</project>
